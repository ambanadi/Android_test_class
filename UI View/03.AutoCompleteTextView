Attribute
1 	android:completionHint
2 	android:completionHintView
3 	android:completionThreshold
4 	android:dropDownAnchor
5 	android:dropDownHeight
6 	android:dropDownHorizontalOffset
7 	android:dropDownSelector
8 	android:dropDownVerticalOffset
9 	android:dropDownWidth
10  android:popupBackground
-----------------------------
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    tools:context=".auto_com">

    <AutoCompleteTextView
        android:id="@+id/autoCompleteTextView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>

</RelativeLayout>
--------------------------
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    tools:context=".Next_Activity">
    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"/>
</RelativeLayout>
------------------------------------------
    private List<String> itemsList;
    private JSONObject dataObject;
    ------

        // Load items from item file
        itemsList = loadItems("items.txt");

        // Load data from data file
        dataObject = loadData("data.json");

        AutoCompleteTextView autoCompleteTextView = findViewById(R.id.autoCompleteTextView);

        // Load items into AutoCompleteTextView
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line, itemsList);
        autoCompleteTextView.setAdapter(adapter);

        // Handle item selection
        autoCompleteTextView.setOnItemClickListener((parent, view, position, id) -> {
            String selectedItem = (String) parent.getItemAtPosition(position);

            // Get data associated with selected item
            String data = getDataForItem(selectedItem);

            // Pass data to next activity
            Intent intent = new Intent(auto_com.this, Next_Activity.class);
            intent.putExtra("data", data);
            startActivity(intent);
        });
    }

    private List<String> loadItems(String fileName) {
        List<String> items = new ArrayList<>();
        try {
            InputStream is = getAssets().open(fileName);
            int size = is.available();
            byte[] buffer = new byte[size];
            is.read(buffer);
            is.close();
            String text = new String(buffer);
            String[] lines = text.split("\n");
            for (String line : lines) {
                items.add(line.trim());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return items;
    }

    private JSONObject loadData(String fileName) {
        JSONObject jsonObject = null;
        try {
            InputStream is = getAssets().open(fileName);
            int size = is.available();
            byte[] buffer = new byte[size];
            is.read(buffer);
            is.close();
            String text = new String(buffer);
            jsonObject = new JSONObject(text);
        } catch (IOException | JSONException e) {
            e.printStackTrace();
        }
        return jsonObject;
    }

    private String getDataForItem(String item) {
        try {
            return dataObject.getString(item);
        } catch (JSONException e) {
            e.printStackTrace();
            return "";
        }
    }
}
---------------------------------------------------

        // Load items from item file
        itemsList = loadItems("items.txt");

        // Load data from data file
        dataObject = loadData("data.json");

        AutoCompleteTextView autoCompleteTextView = findViewById(R.id.autoCompleteTextView);

        // Load items into AutoCompleteTextView
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line, itemsList);
        autoCompleteTextView.setAdapter(adapter);

        // Handle item selection
        autoCompleteTextView.setOnItemClickListener((parent, view, position, id) -> {
            String selectedItem = (String) parent.getItemAtPosition(position);

            // Get data associated with selected item
            String data = getDataForItem(selectedItem);

            // Pass data to next activity
            Intent intent = new Intent(auto_com.this, Next_Activity.class);
            intent.putExtra("data", data);
            startActivity(intent);
        });
    }

    private List<String> loadItems(String fileName) {
        List<String> items = new ArrayList<>();
        try {
            InputStream is = getAssets().open(fileName);
            int size = is.available();
            byte[] buffer = new byte[size];
            is.read(buffer);
            is.close();
            String text = new String(buffer);
            String[] lines = text.split("\n");
            for (String line : lines) {
                items.add(line.trim());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return items;
    }

    private JSONObject loadData(String fileName) {
        JSONObject jsonObject = null;
        try {
            InputStream is = getAssets().open(fileName);
            int size = is.available();
            byte[] buffer = new byte[size];
            is.read(buffer);
            is.close();
            String text = new String(buffer);
            jsonObject = new JSONObject(text);
        } catch (IOException | JSONException e) {
            e.printStackTrace();
        }
        return jsonObject;
    }

    private String getDataForItem(String item) {
        try {
            return dataObject.getString(item);
        } catch (JSONException e) {
            e.printStackTrace();
            return "";
        }
    }
}
------------------------------------------------
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    --------------------------
    data.json
    {
  "Apple": "This is an apple.",
  "Banana": "This is a banana.",
  "Orange": "This is an orange."
}
--------------------------
items.txt
Apple
Banana
Orange
